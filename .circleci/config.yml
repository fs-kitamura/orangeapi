version: 2

references:
  container_config: &container_config
    docker:
      - image: golang:1.8.3
    working_directory: /go/src/github.com/orangesys/orangeapi

    workspace_root: &workspace_root
      /tmp/workspace

    attach_workspace: &attach_workspace
      attach_workspace:
        at: *workspace_root

    load_code: &load_code
      run:
        name: load code from workspace
        command: |
          # Move all files and dotfiles to current directory
          mv /tmp/workspace/orangeapi/* /tmp/workspace/orangeapi/.[!.]* .
    install_docker_client: &install_docker_client
      - run:
          name: Install docker client
          command: |
            VER="17.05.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp/ -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
    go_cache_key: &go_cache_key
      key: dependency-go-{{ checksum "glide.lock" }}

jobs:
  build_orangeapi:
    <<: *container_config
    steps:
      - checkout
      - run:
          name: download dependencies
          command: |
            curl https://glide.sh/get | sh
            glide install
      - run:
          command: make build
      - run:
          command: |
            mkdir -p /tmp/workspace/orangeapi
            mv * .[!.]* /tmp/workspace/orangeapi/
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - orangeapi

  build_container:
    <<: *container_config
    steps:
      - *attach_workspace
      - *load_code
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/alpine-orangeapi.tar
      - *install_docker_client
      - run:
          name: Build orangeapi Docker images
          command: |
            set +o pipefail
            ./scripts/create-container.sh
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/alpine-orangeapi.tar

  deploy:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/orangeapi
    environment:
      PROJECT_NAME: orangesys
      CLOUDSDK_COMPUTE_ZONE: asia-northeast1-c
      ORG_PATH: "github.com/orangesys"
      REPO_PATH: "${ORG_PATH}/orangeapi"
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/alpine-orangeapi.tar
      - run:
          name: Install docker client
          command: |
            set -x
            VER="17.05.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp/ -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/alpine-orangeapi.tar | true
      - run:
          name: Show docker images & Set tag to gcloud docker images
          command: |
            set +o pipefail
            _v=$(git describe --always --tags)
            version=${_v#*v}            
            docker tag "orangesys/alpine-orangeapi:${version}" "asia.gcr.io/saas-orangesys-io/alpine-orangeapi:${version}"
            docker images
      - run:
          name: Push docker hub and gcloud
          command: |
            set +o pipefail
            ./scripts/push-container-images.sh

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build_orangeapi:
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*/      
      - build_container:
          requires:
            - build_orangeapi
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*/            
      - deploy:
          requires:
            - build_orangeapi
            - build_container
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/